/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/ext_power.h>

/ {

	behaviors {
		tlesc: tilde_escape {
			compatible = "zmk,behavior-mod-morph";
			label = "TILDE_ESCAPE";
			#binding-cells = <0>;
			bindings = <&kp ESC>, <&kp GRAVE>;
           		mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
			keep-mods = <(LSHIFT|RSHIFT)>;
		};
	};
	
	macros {
	    ZMK_MACRO(stupid,
		wait-ms = <10>;
		tap-ms = <10>;
		bindings = 
		  <&macro_press &kp LSHFT>, 
                  <&macro_tap &kp T &kp T>,
                  <&macro_release &kp LSHFT>,
		  <&macro_tap &kp Z &kp H &kp P &kp N2 &kp N9 &kp N9 &kp N7 &kp N9 &kp N2>,
		  <&macro_press &kp LSHFT>, 
                  <&macro_tap &kp N3>,
                  <&macro_release &kp LSHFT>,
		  <&macro_tap &kp RET>;
	    )
	};
	
	conditional_layers {
            compatible = "zmk,conditional-layers";
	    tri_layer {
	        if-layers = <1 2>;
	        then-layer = <3>;
	    };
        };
	
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
// ------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
// | lt(1,CAPS)  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      mt(SHIFT,UP)     |
// |  CTL  |  WIN  |  ALT  |            SPACE              |  lt(1, DEL)  |  LEFT  |  DOWN |  lt(2, RIGHT)  |
// ------------------------------------------------------------------------------------------
			bindings = <
	&tlesc  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL  &kp BSPC
	&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT  &kp BSLH
	&lt 1 CLCK  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT           &kp RET
	&kp LSHFT   &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH       &mt RSHFT UP
	&kp LCTRL &kp LALT &kp LGUI             &kp SPACE                     &lt 1 DEL  &kp LEFT  &kp DOWN   &lt 2 RIGHT
			>;
		};

		nav_layer {
// ------------------------------------------------------------------------------------------------
// | ~   | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 |         |
// |     |     |     |     |     |     |     |     |     |     |      |     |     |           |
// |     |     |     |     |   HOME | PGUP | LEFT | DOWN | UP  |  RIGHT   |   |     |  macro:stupid |
// |     |     |      |      |  END   |  PGDN   |     |     |     |     |     |                  |
// |     |      |      |             TOG RGB                |  |       |       |    |
// ------------------------------------------------------------------------------------------------
			bindings = <
	&kp GRAVE  &kp F1    &kp F2    &kp F3  &kp F4  &kp F5 &kp F6  &kp F7  &kp F8   &kp F9   &kp F10  &kp F11 &kp F12  &trans
	&trans  &trans  &trans  &trans  &trans  &trans &trans  &trans   &trans   &trans   &trans  &trans    &trans &trans
	&trans   &trans  &trans  &trans &kp HOME &kp PG_UP &kp LEFT &kp DOWN  &kp UP   &kp RIGHT   &trans   &trans        &stupid
	&trans    &trans    &trans    &trans   &kp END  &kp PG_DN          &trans          &trans          &trans   &trans   &trans    &trans
	&trans  &trans   &trans                            &trans                                      &trans      &trans      &trans     &trans
			>;
		};
		
		dummy_layer {
// ------------------------------------------------------------------------------------------------
// |     |     |     |     |     |     |     |     |     |     |      |     |     |           |
// |     |     |     |     |     |     |     |     |     |     |      |     |     |           |
// |     |     |     |     |     |     |     |     |    |      |   |     |    |
// |     |     |      |      |      |      |     |     |     |     |     |                  |
// |     |      |      |                             |  |       |       |    |
// ------------------------------------------------------------------------------------------------
			bindings = <
	&trans  &trans    &trans    &trans  &trans  &trans &trans  &trans  &trans   &trans   &trans  &trans &trans  &trans
	&trans  &trans  &trans  &trans  &trans  &trans &trans  &trans   &trans   &trans   &trans  &trans    &trans &trans
	&trans   &trans  &trans  &trans &trans &trans &trans &trans  &trans   &trans   &trans   &trans        &trans
	&trans    &trans    &trans    &trans   &trans  &trans          &trans          &trans          &trans   &trans   &trans    &trans
	&trans  &trans   &trans                            &trans                                      &trans      &trans      &trans     &trans
			>;
		};
		
		control_layer {
// ------------------------------------------------------------------------------------------------
// |  reset   |     |     |     |     |     |     |     |     |     |      |     |     |  BT_CLR   |
// | OUT_TOG | BT1 | BT2 | BT3 | BT4 |     |     |     |     |     |      |     |     |           |
// |     |     |     |     |     |     |     |     |     |     |      |     |     |           |
// |     |     |      |      |      |   bootloader   |     |     |     |     |     |                  |
// |     |      |      |          RGB TOGGLE                   |  |       |       |    |
// ------------------------------------------------------------------------------------------------
			bindings = <
	&sys_reset  &trans    &trans    &trans  &trans  &trans &trans  &trans  &trans   &trans   &trans  &trans &trans  &bt BT_CLR
	&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans &trans  &trans   &trans   &trans   &trans  &trans    &trans &trans
	&trans   &trans  &trans  &trans &trans &trans &trans &trans  &trans   &trans   &trans   &trans        &trans
	&trans    &trans    &trans    &trans   &trans  &bootloader      &trans          &trans          &trans   &trans   &trans    &trans
	&trans  &trans   &trans                      &rgb_ug RGB_TOG                         &trans      &trans      &trans     &trans
			>;
		};
	};
};
